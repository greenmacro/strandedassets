#This is the model starting from the Ancona conference and to be updated towards a model for Macroeconomic Dynamics
#First step, v2.0 includes new investment function as described in the InvestmentDecision document
# The depreciation function seems to introduce more volatility (though i'm not clear on how this is possible)
#Second step, v2.1 includes new portfolio equation based on expected market share.
#Third step, v2.2 includes price/productivity story
#Fourth step, v2.3 includes the usage of PV over the capital lifetime for the portfolio equation
#Fifth step, v2.4 includes the usage of PV over the capital lifetime for the portfolio equation, second specification
#WageIRate
t=t(-1)+1
sumkc=pk(-5)*kc(-5)+pi(-5)*ic(-5)+pk(-4)*kc(-4)+pi(-4)*ic(-4)+pk(-3)*kc(-3)+pi(-3)*ic(-3)+pk(-2)*kc(-2)+pi(-2)*ic(-2)+pk(-1)*kc(-1)+pi(-1)*ic(-1)
rca=ifelse(sumkc>0,(Fc(-5)+Fc(-4)+Fc(-3)+Fc(-2)+Fc(-1))/sumkc,0)
sumkk=pk(-5)*kk(-5)+pk(-4)*kk(-4)+pk(-3)*kk(-3)+pk(-2)*kk(-2)+pk(-1)*kk(-1)
rka=ifelse(sumkk>0,(Fk(-5)+Fk(-4)+Fk(-3)+Fk(-2)+Fk(-1))/sumkk,0)
sumki=pk(-5)*ki(-5)+pi(-5)*ii(-5)+pk(-4)*ki(-4)+pi(-4)*ii(-4)+pk(-3)*ki(-3)+pi(-3)*ii(-3)+pk(-2)*ki(-2)+pi(-2)*ii(-2)+pk(-1)*ki(-1)+pi(-1)*ii(-1)
ria=ifelse(sumki>0,(Fi(-5)+Fi(-4)+Fi(-3)+Fi(-2)+Fi(-1))/sumki,0)
#Equations
Wc=Wc(-1) + Omega3*(omegaTc(-1) - Wc(-1)/pc(-1))
Wk=ifelse(exitk(-1)==0,Wk(-1) + Omega3*(omegaTk(-1) - Wk(-1)/pc(-1)),0)
Wi=ifelse(t<=(n+1),Wk(-1),Wi(-1) + Omega3*(omegaTi(-1) - Wi(-1)/pc(-1)))
rlc=rl*(1+1/(1 +exp(kappa*(rca-rb))))
rlk=ifelse(exitk(-1)==0,rl*(1+1/(1+exp(kappa*(rka-rb)))),0)
rli=rl*(1+1/(1 +exp(kappa*(ria-rb))))
#PriceKap
lambdakprev=(lambdak(-4)+lambdak(-3)+lambdak(-2)+lambdak(-1))/4
qkprev=(qk(-4)+qk(-3)+qk(-2)+qk(-1))/4
#depkk = ink(-20)
depkk=ink(-1)*(-5.602796e-09+1.522998e-08)+ink(-2)*(-1.522998e-08+4.139938e-08)+ink(-3)*(-4.139938e-08+1.125352e-07)+ink(-4)*(-1.125352e-07+3.059023e-07)+ink(-5)*(-3.059023e-07+8.315287e-07)+ink(-6)*(-8.315287e-07+2.260329e-06)+ink(-7)*(-2.260329e-06+6.144212e-06)+ink(-8)*(-6.144212e-06+1.67017e-05)+ink(-9)*(-1.67017e-05+4.539993e-05)+ink(-10)*(-4.539993e-05+0.0001234098)+ink(-11)*(-0.0001234098+0.0003354626)+ink(-12)*(-0.0003354626+0.000911882)+ink(-13)*(-0.000911882+0.002478752)+ink(-14)*(-0.002478752+0.006737947)+ink(-15)*(-0.006737947+0.01831564)+ink(-16)*(-0.01831564+0.04978707)+ink(-17)*(-0.04978707+0.1353353)+ink(-18)*(-0.1353353+0.3678794)+ink(-19)*(1-0.3678794)+ink(-1)*5.602796e-09
#Equations block 1
pk=ifelse(exitk(-1)==0,pk(-1)+zeta*((1+phik)*NUCk-pk(-1)),pk(-1))
phik=ifelse(exitk(-1)==0,rkT*(pk(-1)*kk(-1))/(UCke*yke),0)
pik=ifelse(exitk(-1)==0,(pk-pk(-1))/pk(-1),0)
UCke=ifelse(exitk(-1)==0,Wk(-1)/(prk*lkk),0)
NUCk = ifelse(exitk(-1)==0,NUCk(-1)+zeta*(UCke-NUCk(-1)),0)
#TODO: Check this
yke=ifelse(exitk(-1)==0,yk(-1)+epsilon*(yke(-1)-yk(-1)),0)
ukke=ifelse(exitk(-1)==0,yke/(prk*kk(-1)),0)
gk=min(0.3,ifelse(exitk(-1)==0,eta0k+eta1*uke-eta2*rrlk*lambdakprev+eta3*qkprev,0))
uke=ifelse(exitk(-1)==0,yke/(kk(-1)*prk),0)
gkk=ifelse(exitk(-1)==0,gk/prk,0)
rrlk=ifelse(exitk(-1)==0,(1+rlk)/(1+pik(-1))-1,0)
ink=ifelse(exitk(-1)==0,min(kk(-1)*prk,max(0,gkk*kk(-1) + depkk)),0)
kk=ifelse(exitk(-1)==0,kk(-1)+ink-depkk,0)
Ik=ifelse(exitk(-1)==0, ink*pk,0)
ks=ifelse(exitk(-1)==0,kk(-1)*prk-ink,0)
#PriceInov
lambdaiprev=(lambdai(-4)+lambdai(-3)+lambdai(-2)+lambdai(-1))/4
qiprev=(qi(-4)+qi(-3)+qi(-2)+qi(-1))/4
#depki = inik(-20)
#depii = inii(-20)
depki=inik(-1)*(-5.602796e-09+1.522998e-08)+inik(-2)*(-1.522998e-08+4.139938e-08)+inik(-3)*(-4.139938e-08+1.125352e-07)+inik(-4)*(-1.125352e-07+3.059023e-07)+inik(-5)*(-3.059023e-07+8.315287e-07)+inik(-6)*(-8.315287e-07+2.260329e-06)+inik(-7)*(-2.260329e-06+6.144212e-06)+inik(-8)*(-6.144212e-06+1.67017e-05)+inik(-9)*(-1.67017e-05+4.539993e-05)+inik(-10)*(-4.539993e-05+0.0001234098)+inik(-11)*(-0.0001234098+0.0003354626)+inik(-12)*(-0.0003354626+0.000911882)+inik(-13)*(-0.000911882+0.002478752)+inik(-14)*(-0.002478752+0.006737947)+inik(-15)*(-0.006737947+0.01831564)+inik(-16)*(-0.01831564+0.04978707)+inik(-17)*(-0.04978707+0.1353353)+inik(-18)*(-0.1353353+0.3678794)+inik(-19)*(1-0.3678794)+inik(-1)*5.602796e-09
depii=inii(-1)*(-5.602796e-09+1.522998e-08)+inii(-2)*(-1.522998e-08+4.139938e-08)+inii(-3)*(-4.139938e-08+1.125352e-07)+inii(-4)*(-1.125352e-07+3.059023e-07)+inii(-5)*(-3.059023e-07+8.315287e-07)+inii(-6)*(-8.315287e-07+2.260329e-06)+inii(-7)*(-2.260329e-06+6.144212e-06)+inii(-8)*(-6.144212e-06+1.67017e-05)+inii(-9)*(-1.67017e-05+4.539993e-05)+inii(-10)*(-4.539993e-05+0.0001234098)+inii(-11)*(-0.0001234098+0.0003354626)+inii(-12)*(-0.0003354626+0.000911882)+inii(-13)*(-0.000911882+0.002478752)+inii(-14)*(-0.002478752+0.006737947)+inii(-15)*(-0.006737947+0.01831564)+inii(-16)*(-0.01831564+0.04978707)+inii(-17)*(-0.04978707+0.1353353)+inii(-18)*(-0.1353353+0.3678794)+inii(-19)*(1-0.3678794)+inii(-1)*5.602796e-09
firstPeriodInov=(t==(n+1))
#Equations
pi=ifelse(firstPeriodInov,(1+phii)*NUCi,pi(-1)+zeta*((1+phii)*NUCi-pi(-1)))
phii=ifelse(firstPeriodInov,riT*pk/(NUCi*prk),ifelse(NUCi==0|yie==0,0,riT*(pk(-1)*ki(-1)+pi(-1)*ii(-1))/(NUCi*yie)))
#TODO: Check this
yie=ifelse(!firstPeriodInov,yi(-1)+epsilon*(yie(-1)-yi(-1)),0)
pii=ifelse(pi(-1)==0,0,(pi-pi(-1))/pi(-1))
gi=min(0.3,ifelse(t>n+1,ifelse(t<=(n+entry),tau,eta0k+eta1*uie-eta2*rrli*lambdaiprev+eta3*qiprev),0))
uie=ifelse(!firstPeriodInov,ifelse(ii(-1)==0,0,(yie/(ii(-1)*pri+ki(-1)*prk))),0)
#uiie=(!firstPeriodInov)*((ii(-1)==0)*1+(ii(-1)!=0)*min(yie/(pri*ii(-1)),1))
uiie=ifelse(!firstPeriodInov,ifelse(ii(-1)==0,1,min(yie/(pri*ii(-1)),1)),0)
ukie=ifelse(!firstPeriodInov,ifelse(ki(-1)==0,0,min((yie-uiie*pri*ii(-1))/(prk*ki(-1)),1)),0)
UCie=ifelse(firstPeriodInov,Wi/(prk*lki),ifelse(ki(-1)==0&ii(-1)==0,0,Wi(-1)*(uiie*ii(-1)*lki+ukie*ki(-1)*lii)/((ukie*prk*ki(-1)+uiie*pri*ii(-1))*lii*lki)))
NUCi=ifelse(firstPeriodInov,UCie,NUCi(-1)+zeta*(UCie-NUCi(-1)))
rrli=ifelse(firstPeriodInov,0,ifelse(pii==0,0,(1+rli)/(1+pii)-1))
#gii=ifelse(firstPeriodInov,0,gi/pri)
ki=ifelse(firstPeriodInov,inik,ki(-1)-depki)
inii=ifelse(firstPeriodInov,0,min(ii(-1)*pri+ki(-1)*prk,max(((gi*yi(-1)+depii*pri+depki*prk)/pri),0)))
inik=ifelse(firstPeriodInov,rho*Yk(-1)*pri/((1-rho)*pi*prk*(pri-exp(1-n)-tau)),0)
Ii=ifelse(firstPeriodInov,inik*pk,inii*pi)
is=ifelse(firstPeriodInov,0,ii(-1)*pri+ki(-1)*prk-inii)
ii=ifelse(firstPeriodInov,0,ii(-1)-depii+inii)
#PriceCons
lambdacprev=(lambdac(-4)+lambdac(-3)+lambdac(-2)+lambdac(-1))/4
qcprev=(qc(-4)+qc(-3)+qc(-2)+qc(-1))/4
#depkc = inck(-20)
#depic= inci(-20)
depkcT=inck(-1)*(1.522998e-08)+inck(-2)*(-1.522998e-08+4.139938e-08)+inck(-3)*(-4.139938e-08+1.125352e-07)+inck(-4)*(-1.125352e-07+3.059023e-07)+inck(-5)*(-3.059023e-07+8.315287e-07)+inck(-6)*(-8.315287e-07+2.260329e-06)+inck(-7)*(-2.260329e-06+6.144212e-06)+inck(-8)*(-6.144212e-06+1.67017e-05)+inck(-9)*(-1.67017e-05+4.539993e-05)+inck(-10)*(-4.539993e-05+0.0001234098)+inck(-11)*(-0.0001234098+0.0003354626)+inck(-12)*(-0.0003354626+0.000911882)+inck(-13)*(-0.000911882+0.002478752)+inck(-14)*(-0.002478752+0.006737947)+inck(-15)*(-0.006737947+0.01831564)+inck(-16)*(-0.01831564+0.04978707)+inck(-17)*(-0.04978707+0.1353353)+inck(-18)*(-0.1353353+0.3678794)+inck(-19)*(1-0.3678794)
depic=inci(-1)*(1.522998e-08)+inci(-2)*(-1.522998e-08+4.139938e-08)+inci(-3)*(-4.139938e-08+1.125352e-07)+inci(-4)*(-1.125352e-07+3.059023e-07)+inci(-5)*(-3.059023e-07+8.315287e-07)+inci(-6)*(-8.315287e-07+2.260329e-06)+inci(-7)*(-2.260329e-06+6.144212e-06)+inci(-8)*(-6.144212e-06+1.67017e-05)+inci(-9)*(-1.67017e-05+4.539993e-05)+inci(-10)*(-4.539993e-05+0.0001234098)+inci(-11)*(-0.0001234098+0.0003354626)+inci(-12)*(-0.0003354626+0.000911882)+inci(-13)*(-0.000911882+0.002478752)+inci(-14)*(-0.002478752+0.006737947)+inci(-15)*(-0.006737947+0.01831564)+inci(-16)*(-0.01831564+0.04978707)+inci(-17)*(-0.04978707+0.1353353)+inci(-18)*(-0.1353353+0.3678794)+inci(-19)*(1-0.3678794)
depkc=ifelse(depkcT==0&kc(-1)>0,depkc(-1),depkcT)
pc=pc(-1)+zeta*((1+phic)*NUCc-pc(-1))
NUCc=NUCc(-1)+zeta*(UCce-NUCc(-1))
phic=rcT*(pk(-1)*kc(-1) +pi(-1)*ic(-1))/(NUCc*yce)
yce=yc(-1)+epsilon*(yce(-1)-yc(-1))
pic=(pc-pc(-1))/pc(-1)
#uic1e=If[ic(-1)=01yce/(pri ic(-1))]
uice=min(yce/(pri*ic(-1)),1)
ukce=min((yce-uice*pri*ic(-1))/(prk*kc(-1)),1)
UCce=Wc(-1)*(uice*ic(-1)*lkc+ukce*kc(-1)*lic)/((ukce*prk*kc(-1)+uice*pri*ic(-1))*lic*lkc)
gc=min(0.3,eta0c+eta1*uce-eta2*rrlc*lambdacprev+eta3*qcprev)
invyc=max(gc*yc(-1)+depkc*prk+depic*pri,0)
tucic = Wc/(pri * lic) + pi/(deltai * pri)
tuckc = Wc/(prk * lkc) + pk/(deltak * prk)
beta_inv = ifelse(ks>0,ifelse(is>0,1/(beta0 + exp(beta1 * (tucic - tuckc)/tuckc)),0),1)
incid = beta_inv * invyc/pri
inckd = (1 - beta_inv) * invyc/prk
z11=ifelse(incid>is,1,0)
z12=ifelse(inckd>ks,1,0)
inci=min(is,incid+z12*(inckd-ks)*prk/pri)
inck=min(ks,inckd+z11*(incid-is)*pri/prk)
#z11=(invyc>0)*(costk>costi)
#z21=(invyc>0)*(invyc>is*pri)
#z31=(invyc>0)*(invyc>ks*prk)
#z41=(invyc>0)*(invyc>is*pri+ks*prk)
#inci=(invyc>0)*(z11*(z21*is+(1-z21)*invyc/pri)+(1-z11)*z31*(z41*is+(1-z41)*(invyc-ks*prk)/pri))
#inck=(invyc>0)*(z11*z21*(z41*ks+(1-z41)*(invyc-is*pri)/prk)+(1-z11)*(z31*ks+(1-z31)*invyc/prk))
uce=yce/(kc(-1)*prk+ic(-1)*pri)
rrlc=(1+rlc)/(1+picki)-1
picki=(kc(-1)*pik + ic(-1)*pii)/(kc(-1)+ ic(-1))
Ncmax=ic(-1)/lic + kc(-1)/lkc
cs=ifelse(LF-Ni-Nk<Ncmax,(LF-Ni-Nk)/Ncmax,1)*(kc(-1)*prk+ic(-1)*pri)
costk=pk/prk
costi=pi/pri
Ic=inck*pk+inci*pi
kc=kc(-1)+inck-depkc
ic=ic(-1)+inci-depic
#ExpCons
YDwmean=mean(c(YDw(-4),YDw(-3),YDw(-2),YDw(-1)))
CGcmean=mean(c(CGc(-4),CGc(-3),CGc(-2),CGc(-1)))
CGkmean=mean(c(CGk(-4),CGk(-3),CGk(-2),CGk(-1)))
CGimean=mean(c(CGi(-4),CGi(-3),CGi(-2),CGi(-1)))
FDcmean=mean(c(FDc(-4),FDc(-3),FDc(-2),FDc(-1)))
FDkmean=mean(c(FDk(-4),FDk(-3),FDk(-2),FDk(-1)))
FDimean=mean(c(FDi(-4),FDi(-3),FDi(-2),FDi(-1)))
Fcmean=mean(c(Fc(-4),Fc(-3),Fc(-2),Fc(-1)))
Fkmean=mean(c(Fk(-4),Fk(-3),Fk(-2),Fk(-1)))
Fimean=mean(c(Fi(-4),Fi(-3),Fi(-2),Fi(-1)))
FDbmean=mean(c(FDb(-4),FDb(-3),FDb(-2),FDb(-1)))
YDwgr=ifelse(YDw(-2)==0,0,(YDw(-1)-YDw(-2))/YDw(-2))
CGcgr=ifelse(round(CGc(-2),digit=10)==0,0,(CGc(-1)-CGc(-2))/CGc(-2))
CGkgr=ifelse(round(CGk(-2),digit=10)==0,0,(CGk(-1)-CGk(-2))/CGk(-2))
CGigr=ifelse(round(CGi(-2),digit=10)==0,0,(CGi(-1)-CGi(-2))/CGi(-2))
FDcgr=ifelse(FDc(-2)==0,0,(FDc(-1)-FDc(-2))/FDc(-2))
FDkgr=ifelse(FDk(-2)==0,0,(FDk(-1)-FDk(-2))/FDk(-2))
FDigr=ifelse(FDi(-2)==0,0,(FDi(-1)-FDi(-2))/FDi(-2))
Fcgr=ifelse(Fc(-2)==0,0,(Fc(-1)-Fc(-2))/Fc(-2))
Fkgr=ifelse(Fk(-2)==0,0,(Fk(-1)-Fk(-2))/Fk(-2))
Figr=ifelse(Fi(-2)==0,0,(Fi(-1)-Fi(-2))/Fi(-2))
FDbgr=ifelse(FDb(-2)==0,0,(FDb(-1)-FDb(-2))/FDb(-2))
#Equations
Fce=Fcmean+Fcmean*Fcgr*eta+nu*(Fc(-1)-Fce(-1))
rcge=Fce/(ec(-1)*pce(-1))
FDce=FDcmean+FDcmean*FDcgr*eta+chi*(FDc(-1)-FDce(-1))
rce=FDce/(ec(-1)*pce(-1))
CGce= CGcmean+CGcmean*CGcgr*eta+theta*(CGc(-1)-CGce(-1))
cgce = CGce/(ec(-1)*pce(-1))
Fke=ifelse(exitk(-1)!=1,Fkmean+Fkmean*Fkgr*eta+nu*(Fk(-1)-Fke(-1)),0)
rkge=ifelse(exitk(-1)!=1,Fke/(ek(-1)*pke(-1)),0)
FDke=ifelse(exitk(-1)!=1,FDkmean+FDkmean*FDkgr*eta+chi*(FDk(-1)-FDke(-1)),0)
rke=ifelse(exitk(-1)!=1,FDke/(ek(-1)*pke(-1)),0)
CGke=ifelse(exitk(-1)!=1,CGkmean+CGkmean*CGkgr*eta+theta*(CGk(-1)-CGke(-1)),0)
cgke=ifelse(exitk(-1)!=1,CGke/(ek(-1)*pke(-1)),0)
Fie=Fimean+Fimean*Figr*eta+nu*(Fi(-1)- Fie(-1))
FDie= FDimean+FDimean*FDigr*eta+chi*(FDi(-1)-FDie(-1))
CGie =CGimean+CGimean*CGigr*eta+theta*(CGi(-1)-CGie(-1))
rige=ifelse(t>=(n+entry),ifelse(pie(-1)==0,Fie/(ki(-1)*pk(-1)+ii(-1)*pi(-1)),Fie/(ei(-1)*pie(-1))),0)
rie=ifelse(t>=(n+entry),ifelse(pie(-1)==0,FDie/(ki(-1)*pk(-1)+ii(-1)*pi(-1)),FDie/(ei(-1)*pie(-1))),0)
cgie=ifelse(t<(n+1),ifelse(ei(-1)==0|pie(-1)==0,0,(CGie/(ei(-1)*pie(-1)))),0)
FDbe= FDbmean+FDbmean*FDbgr*eta+chi*(FDb(-1)- FDbe(-1))
YPce=FDce+FDke+FDie+FDbe
YDce1=YPce
YDce=(YDce1+abs(YDce1))/2
ydce=YDce/pc-(pic*Vc(-1))/pc
cc0=xic1*ydce+xic2*vc(-1)+xic3*cg(-1)
cc1=(cc0+abs(cc0))/2
YDwe= YDwmean+YDwmean*YDwgr*eta+epsilon*(YDw(-1)-YDwe(-1))
ydwe= YDwe/pc-(pic*Vw(-1))/pc
cw1= xiw1*ydwe + xiw2*vw(-1)
exc1=cs-cw1-cc1
#(*This allows to avoid to consume more than what is possibly producable by the consumption good producers*)
exc2=(exc1-abs(exc1))/2
cw=cw1+cw1/(cw1+cc1)*exc2
Cw=cw*pc
cc=cc1+cc1/(cw1+cc1)*exc2
Cc=cc*pc
#KapProd
inktot=ink+inck+inik
UCk=ifelse(exitk(-1)!=1&inktot>0,Wk/(prk*lkk),0)
Psik=ifelse(exitk(-1)!=1&inktot>0,1/(1+exp(psik*(rkT-cgk(-1)-rlk))),0)
yk=ifelse(exitk(-1)!=1&inktot>0,inktot,0)
uk=ifelse(exitk(-1)!=1&inktot>0,yk/(kk(-1)*prk),0)
ukk=ifelse(exitk(-1)!=1&inktot>0,yk/(prk*kk(-1)),0)
Nk=ifelse(exitk(-1)!=1&inktot>0,ukk*kk(-1)/lkk,0)
Yk=ifelse(exitk(-1)!=1&inktot>0,yk*pk,0)
Fk=ifelse(exitk(-1)!=1&inktot>0,Yk-Wk*Nk-rlk*Lk(-1),0)
rk=ifelse(exitk(-1)!=1&inktot>0,Fk/(kk(-1)*pk(-1)),0)
Ifk=ifelse(exitk(-1)!=1&inktot>0,max(Ik-Fk,0),0)
# FDkT=ifelse(exitk(-1)!=1&inktot>0,RRkT*ek*pke(-1)-CGke,0)
FDkT=max(0,ifelse(exitk(-1)!=1&inktot>0,RRkT*ek*pke(-1)-1.0*CGke,0))
REkT=ifelse(exitk(-1)!=1&inktot>0,Lk(-1)+Ik-esk*pke(-1)-lambdakT*(kk(-1)-depkk+ink)*pk,0)
Mkin=esk*pke+Fk
Mkleft=ifelse(exitk(-1)!=1&inktot>0,max(Mk(-1)+Mkin-REkT-FDkT,0),0)
Mktot=Mk(-1)+Mkin
FDk=ifelse(exitk(-1)!=1&inktot>0,ifelse(Mkleft>0,FDkT+Mkleft/nLoans,ifelse(REkT<0,Mktot-REkT,FDkT*Mktot/(FDkT+REkT))),0)
REk=ifelse(exitk(-1)!=1&inktot>0,ifelse(Mkleft>0,REkT,ifelse(REkT<0,REkT,REkT*Mktot/(FDkT+REkT))),0)
#esk=ifelse(exitk(-1)!=1&inktot>0,(Psik*Ifk)/pke(-1),0)
esk=ifelse(exitk(-1)!=1&inktot>0,0,0)
ek=ek(-1)+esk
#InovProd
#IF 1
yi=ifelse(firstPeriodInov,inik*prk,ifelse(t<=(n+entry)&t>(n+1),inii+inci,0)+ifelse(t>(n+entry),inii+inci,0))
ui=ifelse(t<=(n+entry)&t>(n+1),yi/(ki(-1)*prk+ii(-1)*pri),0)+ifelse(t>(n+entry),yi/(ki(-1)*prk+ii(-1)*pri),0)
Yi=ifelse(t<=(n+entry)&t>(n+1),yi*pi,0)+ifelse(t>(n+entry),yi*pi,0)
#uii1=if ii(-1)=0 1 yi/(pri ii(-1))]
#uii1=(t<=(n+entry)&t>(n+1))*((ii(-1)!=0)*(yi/(pri*ii(-1))))+(t>(n+entry))*(yi/(pri*ii(-1)))
uii1=ifelse(t<=(n+entry)&t>(n+1),ifelse(ii(-1)!=0,max(0,min(1,yi/(pri*ii(-1)))),1),ifelse(t>(n+entry),max(0,min(1,yi/(pri*ii(-1)))),0))
#uii=if ini+inci=0 0 if ii(-1)=0 1 uii1- (uii2+ Abs [uii2])/2
uii=ifelse(t<=(n+entry)&t>(n+1),ifelse((inii+inci)!=0,ifelse(ii(-1)==0,1,uii1),0),0)+ifelse(t>(n+entry),ifelse((inii+inci)!=0,uii1,0),0)
#uki=if ini+inci=0 0 if ki(-1)=0 0 (uii2+ Abs [uii2])/(2 uii2) ((yi-uii pri ii(-1))/(prk ki(-1)))
uki=ifelse(t>(n+1),ifelse((inii+inci)==0,0,ifelse(ki(-1)==0,0,max(0,(yi-uii*pri*ii(-1))/(prk*ki(-1))))),0)
#Ni=if ini+inci=0 0 uii ii(-1)/li + uki ki(-1)/lk
Ni=ifelse(t<=(n+entry)&t>(n+1),ifelse((inii+inci)!=0,uii*ii(-1)/lii + uki*ki(-1)/lki,0),0)+ifelse(t>(n+entry),ifelse((inii+inci)!=0,uii*ii(-1)/lii+uki*ki(-1)/lki,0),0)
#UCi=if ini+inci=0 0 Wi (uii ii(-1) lk+uki ki(-1) li)/((uki prk ki(-1) +uii pri ii(-1))li lk)
UCi=ifelse(t<=(n+entry)&t>(n+1),ifelse((inii+inci)!=0,Wi*(uii*ii(-1)*lki+uki*ki(-1)*lii)/((uki*prk*ki(-1) +uii*pri*ii(-1))*lii*lki),0),0)+ifelse(t>(n+entry),ifelse((inii+inci)!=0,Wi*(uii*ii(-1)*lki+uki*ki(-1)*lii)/((uki*prk*ki(-1)+uii*pri*ii(-1))*lii*lki),0),0)
Fi=ifelse(t>(n+1),Yi-Wi*Ni-rli*Li(-1),0)
Psii=0+(t>(n+entry))*(1/(1+exp(psii*(riT-cgi(-1)-rli))))
ri=ifelse(t<=(n+entry)&t>(n+1),Fi/(ki(-1)*pk(-1)+ii(-1)*pi(-1)),0)+ifelse(t>(n+entry),Fi/(ki(-1)*pk(-1)+ii(-1)*pi(-1)),0)
Ifi=ifelse(t<=(n+entry)&t>(n+1),max(Ii-Fi,0),0)+ifelse(t>(n+entry),max(Ii-Fi-Mi(-1),0),0)+ifelse(t==(n+1),Ii,0)
#esi=ifelse(t>(n+entry),(psii*Ifi)/pie(-1),ifelse(t==(n+entry),100,0))
esi=ifelse(t>(n+entry),0,ifelse(t==(n+entry),100,0))
ei=ifelse(t<=(n+entry)&t>(n+1),ei(-1)+esi,0)+ifelse(t>(n+entry),ei(-1)+esi,0)
# FDiT=ifelse(t>(n+entry),RRiT*ei*pie(-1)-CGie,0)
FDiT=max(0,ifelse(t>(n+entry),RRiT*ei*pie(-1)-1.0*CGie,0))
REiT=ifelse(t>(n+1),Li(-1)+Ii-esi*pie(-1)-lambdaiT*((ki(-1)-depki)*pk+(ii(-1)-depii+inii)*pi),0)
Miin=esi*pie+Fi
Mileft=max(Mi(-1)+Miin-REiT-FDiT,0)
Mitot=Mi(-1)+Miin
FDi=ifelse(t>(n+entry),ifelse(Mileft>0,FDiT+Mileft/nLoans,ifelse(REiT<0,Mitot-REiT,FDiT*Mitot/(FDiT+REiT))),0)
REi=ifelse(t>(n+1),ifelse(Mileft>0,REiT,ifelse(REiT<0,REiT,REiT*Mitot/(FDiT+REiT))),0)
#ConsProd
yc=cc+cw
uc=yc/(kc(-1)*prk +ic(-1)*pri)
Yc=yc*pc
#uic1=if icprev=0 1 yc/(pri icprev)
uic1=ifelse(ic(-1)==0,1,0)+ifelse(ic(-1)>0,max(0,min(yc/(pri*ic(-1)),1)),0)
#uic2=if ic(-1)=0 1 uic1-1
uic=uic1
#ukc=if kc(-1)=0 1 (uic2+ abs(uic2])/(2 uic2) ((yc-uic pri ic(-1))/(prk kc(-1)))
ukc=ifelse(kc(-1)==0,1,0)+ifelse(kc(-1)>0,max(0,(yc-uic*pri*ic(-1))/(prk*kc(-1))),0)
Nc=uic*ic(-1)/lic + ukc*kc(-1)/lkc
UCc=Wc*(uic*ic(-1)*lkc+ukc*kc(-1)*lic)/((ukc*prk*kc(-1) +uic*pri*ic(-1))*lic*lkc)
Fc=Yc-Wc*Nc-rlc*Lc(-1)
# FDcT=RRcT*ec*pce(-1)-CGce
FDcT=max(0,RRcT*ec*pce(-1)-1.0*CGce)
REcT=Lc(-1)+Ic-esc*pce(-1)-lambdacT*((kc(-1)-depkc+inck)*pk+(ic(-1)-depic+inci)*pi)
Mcin=esc*pce+Fc
Mcleft=max(Mcon(-1)+Mcin-REcT-FDcT,0)
Mctot=Mcon(-1)+Mcin
FDc=ifelse(Mcleft>0,FDcT+Mcleft/nLoans,ifelse(REcT<0,Mctot-REcT,FDcT*Mctot/(FDcT+REcT)))
REc=ifelse(Mcleft>0,REcT,ifelse(REcT<0,REcT,REcT*Mctot/(FDcT+REcT)))
rc=Fc/(kc(-1)*pk(-1)+ic(-1)*pi(-1))
Ifc=max(Ic-Fc,0)
Psic=1/(1+exp(psic*(rcT-cgc(-1)-rlc)))
esc=ifelse(TRUE,0,0)
#(Psic*Ifc)/pce(-1)
ec=ec(-1)+esc
#Wage Income
Ntot=Nc+Nk+Ni
Aprc=yc/Nc
#Aprk=if exitk=1||Nk=0 0 yk/Nk
Aprk=ifelse(exitk(-1)!=1&Nk>0,yk/Nk,0)
#Apri=If[Ni=00.001yi/Ni]
Apri=ifelse(Ni>0,yi/Ni,0.001)
omegaTc=Omega0+Omega1*log(Aprc)+ Omega2*log(Ntot/LF)
#omegaTk=If exitk=1||Nk=0 0 Omega0 +Omega1 Log[Aprk]+ Omega2 Log[Ntot/LF]
omegaTk=ifelse(exitk(-1)!=1&Nk>0,Omega0+Omega1*log(Aprk)+Omega2*log(Ntot/LF),0)
omegaTi=Omega0+Omega1*log(Apri)+Omega2*log(Ntot/LF)
YDw=Wc*Nc+Wk*Nk+Wi*Ni
Vw=Vw(-1)+(YDw-Cw)
vw=Vw/pc
Mw=Vw
ydw=YDw/pc-pic*Vw(-1)/pc
#Cap Income
#TODO: COMPUTE THE LAMBDAS ACCORDINGLY
#1. Compute expected potential output in 4 periods for each sector
kcgr=ifelse(kc(-1)==0,0,(kc-kc(-1))/kc(-1))
kkgr=ifelse(kk(-1)==0,0,(kk-kk(-1))/kk(-1))
kigr=ifelse(ki(-1)==0,0,(ki-ki(-1))/ki(-1))
icgr=ifelse(ic(-1)==0,0,(ic-ic(-1))/ic(-1))
iigr=ifelse(ii(-1)==0,0,(ii-ii(-1))/ii(-1))
cgr=ifelse(kc(-1)+ic(-1)==0,0,(kc+ic-kc(-1)-ic(-1))/(kc(-1)+ic(-1)))
kgr=kkgr
igr=ifelse(ki(-1)+ii(-1)==0,0,(ki+ii-ki(-1)-ii(-1))/(ki(-1)+ii(-1)))
capgr=ifelse(kk(-1)+ki(-1)+ii(-1)==0,0,(kk+ki+ii-kk(-1)-ki(-1)-ii(-1))/(kk(-1)+ki(-1)+ii(-1)))
sharekk=round(kk(-1)/(kk(-1)+ki(-1)+ii(-1)),digit=10)
shareki=round(ki(-1)/(kk(-1)+ki(-1)+ii(-1)),digit=10)
iigre=ifelse(sharekk==1,0,ifelse(ii(-1)==0,0,(1-thetashock)*(capgr-sharekk*kkgr-shareki*kigr)/(1-sharekk-shareki)))
kkgre=ifelse(sharekk==0,0,(capgr-(1-sharekk-shareki)*iigre-shareki*kigr)/sharekk)
kigre=ifelse(shareki==0,0,ifelse(sharekk==1,0,(capgr-(1-sharekk-shareki)*iigre-sharekk*kkgr)/shareki))
kcgrmeanbau=mean(c(kcgr(-4),kcgr(-3),kcgr(-2),kcgr(-1)))
kkgrmeanbau=mean(c(kkgr(-4),kkgr(-3),kkgr(-2),kkgr(-1)))
kigrmeanbau=mean(c(kigr(-4),kigr(-3),kigr(-2),kkgr(-1)))
icgrmeanbau=mean(c(icgr(-4),icgr(-3),icgr(-2),icgr(-1)))
iigrmeanbau=mean(c(iigr(-4),iigr(-3),iigr(-2),iigr(-1)))
capgrmeanbau=mean(c(capgr(-4),capgr(-3),capgr(-2),capgr(-1)))
kkgrmeane=mean(c(kkgre(-4),kkgre(-3),kkgre(-2),kkgre(-1)))
kigrmeane=mean(c(kigre(-4),kigre(-3),kigre(-2),kigre(-1)))
iigrmeane=mean(c(iigre(-4),iigre(-3),iigre(-2),iigre(-1)))
kcgrmeane=mean(c(kcgr(-4),kcgr(-3),kcgr(-2),kcgr(-1)))
icgrmeane=mean(c(icgr(-4),icgr(-3),icgr(-2),icgr(-1)))
kcperc=kc
icperc=ic
kiperc=ifelse(ki==0,0,(1-phi)*ki + phi*ki(-1)*(1+kigrmeane))
iiperc=ifelse(ii==0,0,(1-phi)*ii + phi*ii(-1)*(1+iigrmeane))
kkperc=ifelse(kk==0,0,(1-phi)*kk + phi*kk(-1)*(1+kkgrmeane))
xkc=(1+kcgrmeane)/(1+rl)
xic=(1+icgrmeane)/(1+rl)
xkk=(1+kkgrmeane)/(1+rl)
xki=(1+kigrmeane)/(1+rl)
xii=(1+iigrmeane)/(1+rl)
PVyc=ifelse(kcperc>0,kcperc*(1-xkc^deltak)/(1-xkc)+icperc*(1-xic^deltak)/(1-xic),icperc*(1-xic^deltak)/(1-xic))
PVyk=kkperc*(1-xkk^deltak)/(1-xkk)
PVyi=ifelse(kiperc>0,kiperc*(1-xki^deltak)/(1-xki)+iiperc*(1-xii^deltak)/(1-xii),iiperc*(1-xii^deltak)/(1-xii))
ypotce=PVyc*(1-lambdacT)
ypotke=PVyk*(1-lambdakT)
ypotie=PVyi*(1-lambdaiT)
#lambda20=If[yk=0||Fk<0(kc prk+ic pri)/(kc prk+ic prk+ki prk+ii pri)If[ei=0(kc prk + ic pri)/(kc prk + ic pri+kk prk)0]](1-lambda10)
lambda20=ifelse(yk==0|Fk<0,ypotce/(ypotce+ypotie),ifelse(ei==0,ypotce/(ypotce+ypotke),0))*(1-lambda10)
#lambda20=ifelse(yk==0|Fk<0,(kc*prk+ic*pri)/((kc+ki)*prk+(ic+ii)*pri),ifelse(ei==0,(kc*prk+ic*pri)/((kc+kk)*prk+ic*pri),0))*(1-lambda10)
lambda30=1-lambda20-lambda10
#lambda20a= If[yk=0||Fk<00(kc prk+ic pri)/(kc prk+ic prk+ki prk+ii pri+kk prk)](1-lambda10a-0.08)
lambda20a= ifelse(exitk(-1)==0,ifelse(ei==0,0,ypotce*(1-lambda10a-initlambda)/(ypotce+ypotke+ypotie)),0)
#lambda20a= ifelse(exitk(-1)==0,ifelse(ei==0,0,(kc*prk+ic*pri)*(1-lambda10a-initlambda)/((kc+kk+ki)*prk+(ic+ii)*pri)),0)
#lambda20a= ifelse(exitk(-1)==0,ifelse(ei==0,0,ifelse(lambda20a(-1)==0,(kc*prk+ic*pri)*(1-lambda10a-irrational3)/(kc*prk+ic*prk+ki*prk+ii*pri+kk*prk+ii*pri+ki*prk),irrational*lambda20a(-1)+(1-irrational)*(kc*prk+ic*pri)*(1-lambda10a-irrational3)/(kc*prk+ic*prk+ki*prk+ii*pri+kk*prk))),0)
#temp2=(kc*prk+ic*pri)/(kc*prk+ic*prk+ki*prk+ii*pri+kk*prk)
#temp=(kk*prk)/(kc*prk+ic*prk+ki*prk+ii*pri+kk*prk)
#lambda30a=If[yk=0||Fk<00(kk prk)/(kc prk+ic prk+ki prk+ii pri+kk prk)](1-lambda10a-0.08)
lambda30a= ifelse(exitk(-1)==0,ifelse(ei==0,0,ypotke*(1-lambda10a-initlambda)/(ypotce+ypotke+ypotie)),0)
#lambda30a= ifelse(exitk(-1)==0,ifelse(ei==0,0,kk*prk*(1-lambda10a-initlambda)/((kc+kk+ki)*prk+(ic+ii)*pri)),0)
#lambda30a= ifelse(exitk(-1)==0,ifelse(ei==0,0,ifelse(lambda30a(-1)==0,(kk*prk+irrational2*(kk*prk+kc*prk+ic*pri+ii*pri+ki*prk))*(1-lambda10a-irrational3)/(kc*prk+ic*prk+ki*prk+ii*pri+kk*prk+ii*pri+ki*prk),irrational*lambda30a(-1)+(1-irrational)*(kk*prk+irrational2*(kk*prk+kc*prk+ic*pri))*(1-lambda10a-irrational3)/(kc*prk+ic*prk+ki*prk+ii*pri+kk*prk))),0)
#lambda30a= ifelse(exitk(-1)==0,ifelse(ei==0,0,ifelse(lambda30a(-1)==0,(kk*prk)*(1-lambda10a-irrational3)/(kc*prk+ic*prk+ki*prk+ii*pri+kk*prk+ii*pri+ki*prk),irrational*lambda30a(-1)+(1-irrational)*(kk*prk)*(1-lambda10a-irrational3)/(kc*prk+ic*prk+ki*prk+ii*pri+kk*prk))),0)
#lambda30a=temp*(temp2*(lambda40a-0.08)/(1-temp2)+lambda40a-0.08)/(1-temp-temp*temp2/(1-temp2))
#lambda20a=temp2*(lambda30a+lambda40a-0.08)/(1-temp2)
lambda40a=1-(lambda20a+lambda30a+lambda10a)
#McD=beta*Cc
Vce=Vc(-1) + YDce - Cc
#Vece=Vce-McD
Vece=Vce
RRm=-pic/(1+pic)
#RRc=If[cgce=0(xi1b( (1+cgce)/(1+pic)-1)+xi1((1+rce)/(1+pic)-1)+xi1((1+rcge)/(1+pic)-1))](*TODO: CHANGE xi1a*)
RRc=ifelse(round(cgce,digit=6)==0,chi1a*((rce+1)/(1+pic)-1)+chi1a*((1+rcge)/(1+pic)-1),(chi1b*((1+cgce)/(1+pic)-1)+chi1*((1+rce)/(1+pic)-1)+chi1*((1+rcge)/(1+pic)-1)))
#RRk=If[yk=0||Fk<00If[cgke=0xi1a((rke+1)/(1+pic)-1)+xi1a((1+rkge)/(1+pic)-1)(xi1b( (1+cgke)/(1+pic)-1)+xi1((1+rke)/(1+pic)-1)+xi1((1+rkge)/(1+pic)-1))]](*TODO: CHANGE xi1a*)
RRk=ifelse(yk!=0&Fk>=0,ifelse(round(cgke,digit=6)==0,chi1a*((rke+1)/(1+pic)-1)+chi1a*((1+rkge)/(1+pic)-1),(chi1b*((1+cgke)/(1+pic)-1)+chi1*((1+rke)/(1+pic)-1)+chi1*((1+rkge)/(1+pic)-1))),0)
#RRi=If[ei=00If [cgie=0xi1a((rie+1)/(1+pic)-1)+xi1a((1+rige)/(1+pic)-1)(xi1b( (1+cgie)/(1+pic)-1)+xi1((1+rie)/(1+pic)-1)+xi1((1+rige)/(1+pic)-1))]](*TODO: CHANGE xi1a*)
RRi=ifelse(ei>0,ifelse(round(cgie,digit=6)==0,chi1a*((rie+1)/(1+pic)-1)+chi1a*((1+rige)/(1+pic)-1),(chi1b*((1+cgie)/(1+pic)-1)+chi1*((1+rie)/(1+pic)-1)+chi1*((1+rige)/(1+pic)-1))),0)
#McDf=If[yk=0||Fk<0,lambda10 Vece +(lambda11 RRm+lambda12 RRc+lambda13 RRi) Vece,If[ei=0,lambda10 Vece +(lambda11 RRm+lambda12 RRc+lambda13 RRk) Vece,lambda10a Vece +(lambda11a RRm+lambda12a RRc+lambda13a RRk+lambda14a RRi) Vece]]
McDf=ifelse(exitk(-1)==1,lambda10*Vece +(lambda11*RRm+lambda12*RRc+lambda13*RRi)*Vece,ifelse(ei==0,lambda10*Vece +(lambda11*RRm+lambda12*RRc+lambda13*RRk)*Vece,lambda10a*Vece +(lambda11a*RRm+lambda12a*RRc+lambda13a*RRk+lambda14a*RRi)*Vece))
#pce=If[yk=0||Fk<0,lambda20 Vece/ec+(lambda21 RRm+lambda22 RRc+lambda23 RRi) Vece/ec,If[ei=0,lambda20 Vece/ec+(lambda21 RRm+lambda22 RRc+lambda23 RRk) Vece/ec,lambda20a Vece/ec+(lambda21a RRm+lambda22a RRc+lambda23a RRk+lambda24a RRi) Vece/ec]]
pce=ifelse(exitk(-1)==1,lambda20*Vece/ec +(lambda21*RRm+lambda22*RRc+lambda23*RRi)*Vece/ec,ifelse(ei==0,lambda20*Vece/ec +(lambda21*RRm+lambda22*RRc+lambda23*RRk)*Vece/ec,lambda20a*Vece/ec+(lambda21a*RRm+lambda22a*RRc+lambda23a*RRk+lambda24a*RRi)*Vece/ec))
#pke=If[yk=0||Fk<00,If[ei=0lambda30 Vece/ek+(lambda31 RRm+lambda32 RRc+lambda33 RRk) Vece/ek,lambda30a Vece/ek+(lambda31a RRm+lambda32a RRc+lambda33a RRk +lambda34a RRi) Vece/ek]],
pke=max(0,ifelse(exitk(-1)==1,0,ifelse(ei==0,lambda30*Vece/ek +(lambda31*RRm+lambda32*RRc+lambda33*RRk)*Vece/ek,lambda30a*Vece/ek+(lambda31a*RRm+lambda32a*RRc+lambda33a*RRk+lambda34a*RRi)*Vece/ek)))
#pie=If[yk=0||Fk<0,lambda30 Vece/ei+(lambda31 RRm+lambda32 RRc+lambda33 RRi) Vece/ei,If[ei=00,lambda40a Vece/ei+(lambda41a RRm+lambda42a RRc+lambda43a RRk+lambda44a RRi) Vece/ei]]
pie=ifelse(exitk(-1)==1,lambda30*Vece/ei+(lambda31*RRm+lambda32*RRc+lambda33*RRi)*Vece/ei,ifelse(ei>0,lambda40a*Vece/ei+(lambda41a*RRm+lambda42a*RRc+lambda43a*RRk+lambda44a*RRi)*Vece/ei,0))
Vec=pce*ec+pke*ek +pie*ei +McDf
#CG = If[ei(-1)=0&&ei>0ec(-1)(pce-pce(-1))+ek(-1)(pke-pke(-1))ec(-1)(pce-pce(-1))+ek(-1)(pke-pke(-1))+ ei(-1) (pie-pie(-1))]
CG = ifelse(ei(-1)==0&ei>0,ec(-1)*(pce-pce(-1))+ek(-1)*(pke-pke(-1)),ec(-1)*(pce-pce(-1))+ek(-1)*(pke-pke(-1))+ ei(-1)*(pie-pie(-1)))
cg=CG/pc
#FDb= rlc Lc(-1) +If[yk=0||Fk<0-Lk(-1) rlk Lk(-1)] + rli Li(-1)
FDbraw= rlc*Lc(-1) +ifelse(yk!=0&Fk>=0&pke>0,rlk*Lk(-1),-(Lk(-1)-Mk(-1))) + rli*Li(-1)
FDb=max(0,FDbraw)
bailout=FDb-FDbraw
YPc=FDc+FDk+FDb+FDi
YDc=YPc
ydc=YDc/pc - pic*Vc(-1)/pc
Vc=Vc(-1)+(YDc-Cc)-bailout+CG
Mc=McDf+Vc -Vec
vc=Vc/pc
#Finance
Lc=Lc(-1)+Ic-esc*pce-REc
#Lk=If[yk=0||Fk<00Lk(-1)+Ifk-esk pke]
Lk=ifelse(yk!=0&Fk>=0,Lk(-1)+Ik-esk*pke-REk,0)
qc= (ec*pce)/(pk*kc +pi*ic -Lc)
#qk= If[yk=0||Fk<00(ek pke)/(pk kk)]
qk=ifelse(yk!=0&Fk>=0,(ek*pke)/(pk*kk-Lk),0)
#qi=If[ki=0&&ii=01If[ei=01 (ei pie)/(pk ki +pi ii)]]
qi=ifelse((ki==0&ii==0)|ei==0,1,(ei*pie)/(pk*ki +pi*ii-Li))
CGc=ec(-1)*(pce-pce(-1))
#CGk=If[yk=00ek(-1)(pke-pke(-1))]
CGk=ifelse(yk!=0,ek(-1)*(pke-pke(-1)),0)
CGi=ifelse(ei(-1)!=0&pie(-1)!=0,ei(-1)*(pie-pie(-1)),0)
cgc=CGc/(pce(-1)*ec(-1))
#cgk=If[yk=0||Fk<00CGk/(pke(-1) ek(-1))]
cgk=ifelse(yk!=0&Fk>=0,CGk/(pke(-1)*ek(-1)),0)
#cgi=If[ei(-1)=0||pie(-1)=00CGi/(pie(-1) ei(-1))]
cgi=ifelse(ei(-1)!=0&pie(-1)!=0,CGi/(pie(-1)*ei(-1)),0)
lambdac=Lc/(kc*pk + ic*pi)
#lambdak=If[yk=0||Fk<00Lk/(kk pk )]
lambdak=ifelse(exitk(-1)==0,Lk/(kk*pk),0)
# Mi=max(Mileft-Li(-1)/nLoans,0)
Mi=ifelse(Mileft>0,ifelse(t>(n+entry),Mileft*(1-1/nLoans),Mileft),0)
Mcon=ifelse(Mcleft>0,Mcleft*(1-1/nLoans),0)
Mk=ifelse(Mkleft>0,Mkleft*(1-1/nLoans),0)
Ms=Mw+Mc+Mi+Mcon+Mk
Ld=Lc+Lk+Li
# Li1=Li(-1)+Ii-esi*pie-REi
# Li=ifelse(Li1<0,((ii(-1)-depii+inii)*pi+(ki(-1)-depki)*pk),Li1)
Li=Li(-1)+Ii-REi
# Mi=Mi(-1)+Li-Li(-1)
#lambdai=If[ki=0&&ii=00Li/(ki pk + ii pi)]
lambdai=ifelse(ki!=0|ii!=0,Li/(ki*pk + ii*pi),0)
mktsharei=yi/(yi+yk)
exitk=ifelse(exitk(-1)==1,1,ifelse(yk==0|Fk<0|pke<=0,1,0))
# If[results[[idyi,time]]==0&&exitk==0,
# 	 Print["END OF SIMULATION: INOVATIVE CAPITAL FIRM HAS A DEMAND OF 0"];
# 	 Print[StringJoin["POTENTIAL MARKET SHARE: ",ToString[(results[[idkk,t-1]] prk)/(results[[idkk,t-1]] prk+results[[idii,t-1]] pri)/.parameters]]];
# 	 nPeriods=time;
# 	 ];
#Calib
uTk= 0.8 
uTc= 0.8 
uTi= 0.8 
prk= 0.3 
LF= 1000 
u= 0.2 
n= 20 
kstock= 100 
ws= 0.6 
xic1= 0.7 
xic2= 0.05 
xic3= 0 
xiw1= 0.9 
xiw2= 0.02 
wage= 10 
rl= 0.03 
beta= 0.3 
rb= 0.073 
ecss= 100 
ekss= 50 
rlcss= 0.04 
rlkss= 0.04 
Omega3= 0 
eta1= 0.05 
eta2= 0.3 
eta3= 0 
Omega0= 0.3 
Omega1= 0.1 
pri= 0.3 
epsilon= 0.1 
theta= 0.25 
chi= 0.25 
nu= 0.25 
chi1a= 0.333333333333333 
chi1= 0.375 
chi1b= 0.25 
rho= 0.03 
tau= 0.01 
lambda10s= 0.091304347826087 
McDfss= 1400 
nLoans= 5 
eta0i= 0.06 
eta3i= 0.01 
entry= 20 
back= 4 
lkc= 0.48 
lic= 0.48 
lkk= 0.48 
lki= 0.528 
lii= 0.528 
rcT= 0.096 
rkT= 0.096 
riT= 0.096 
Omega2= 0.0887581197966042 
eta0c= -0.0310576 
eta0k= -0.0310576 
lambda10= 0.091304347826087 
lambda11= 0 
lambda12= 0 
lambda13= 0 
lambda21= 0 
lambda22= 0 
lambda23= 0 
lambda31= 0 
lambda32= 0 
lambda33= 0 
lambda10a= 0.091304347826087 
lambda11a= 0 
lambda12a= 0 
lambda13a= 0 
lambda14a= 0 
lambda21a= 0 
lambda22a= 0 
lambda23a= 0 
lambda24a= 0 
lambda31a= 0 
lambda32a= 0 
lambda33a= 0 
lambda34a= 0 
lambda41a= 0 
lambda42a= 0 
lambda43a= 0 
lambda44a= 0 
kappa= -101.813628166856 
exitk= 0 
zeta= 0.1 
NUCc= 69.4444444444444 
NUCk= 69.4444444444444 
NUCi=0 
eta= 0 
omegaTc= 0.0864 
omegaTk= 0.0864 
omegaTi= 0 
lambda40a= 0 
Wc= 10 
Wk= 10 
Wi=0 
rlc= 0.04 
rlk= 0.04 
rli=0 
rca= 0.0661920000000001 
rka= 0.0661920000000001 
ria=0 
pk= 115.740740740741 
phik= 0.666666666666667 
yke= 24 
pik=0 
ukke= 0.8 
UCke= 69.4444444444444 
gk=0 
uke= 0.8 
gkk=0 
kk= 100 
rrlk= 0.04 
ink= 5 
Ik= 578.703703703704 
ks= 25 
depkk= 5 
pi=0 
phii=0 
yie=0 
pii=0 
uiie=0 
ukie=0 
UCie=0 
gi=0 
uie=0 
rrli=0 
gii=0 
ii=0 
inii=0 
inik=0 
Ii=0 
is=0 
ki=0 
depki=0 
depii=0 
pc= 115.740740740741 
phic= 0.666666666666667 
yce= 91.2 
pic=0 
uice=0 
ukce= 0.8 
UCce= 69.4444444444444 
gc=0 
costk= 385.802469135802 
costi=0 
inci=0 
inck= 19 
uce= 0.8 
rrlc= 0.04 
picki=0 
Ic= 2199.07407407407 
kc= 380 
ic=0 
depkc= 19 
depkcT= 19 
depic=0 
ydwe= 69.12 
cw= 69.12 
Cw= 8000 
ydce= 22.08 
cc= 22.08 
Cc= 2555.55555555556 
CGce=0 
CGke=0 
CGie=0 
FDce= 712.148148148146 
FDke= 187.407407407409 
FDie=0 
cgce=0 
cgke=0 
cgie=0 
rce= 0.0645614035087718 
rke= 0.0645614035087722 
rie=0 
yk= 24 
Yk= 2777.77777777778 
ukk= 0.8 
Nk= 166.666666666667 
UCk= 69.4444444444444 
Ifk=0 
psik=0 
Fk= 766.111111111112 
esk=0 
ek= 50 
FDk= 187.407407407409 
REk= 578.703703703704 
rk= 0.0661920000000001 
uk= 0.8 
yi=0 
Yi=0 
uii=0 
uki=0 
Ni=0 
UCi=0 
Ifi=0 
psii=0 
Fi=0 
Mi=0 
esi=0 
ei=0 
FDi=0 
REi=0 
RRi=0 
ri=0 
ui=0 
yc= 91.2 
Yc= 10555.5555555556 
uic=0 
ukc= 0.8 
Nc= 633.333333333333 
UCc= 69.4444444444444 
Ifc=0 
psic=0 
Fc= 2911.22222222222 
esc=0 
ec= 100 
FDc= 712.148148148146 
REc= 2199.07407407407 
rc= 0.0661920000000001 
uc= 0.8 
Ntot= 800 
Aprc= 0.144 
Aprk= 0.144 
Apri=0 
YDw= 8000 
YDwe= 8000 
Vw= 40000 
vw= 345.6 
Mw= 40000 
ydw= 69.12 
FDb= 1656 
FDbe= 1656 
YPc= 2555.55555555556 
YDc= 2555.55555555556 
CG=0 
cg=0 
ydc= 22.08 
Vc= 15333.3333333333 
Vec= 15333.3333333333 
McDf= 1400 
Mc= 1400 
vc= 132.48 
YDce= 2555.55555555556 
YPce= 2555.55555555556 
Vce= 15333.3333333333 
Vece= 15333.3333333333 
pce= 110.305555555555 
pke= 58.0555555555557 
pie=0 
Ms= 41400 
Ld= 41400 
Lc= 32775 
Lk= 8624.99999999997 
Li=0 
lambdac= 0.745200000000001 
lambdak= 0.745199999999998 
lambdai=0 
qc= 0.984301412872843 
qk= 0.984301412872834 
qi=0 
CGc=0 
CGk=0 
CGi=0 
cgc=0 
cgk=0 
cgi=0 
t=0 
RRc= 0.109494949494949 
RRk= 0.10949494949495 
Fce= 2911.22222222222 
Fke= 766.111111111112 
irrational= 0 
irrational2= 0 
irrational3= 0.04 
irrational4= 0 
Fie=0 
cs= 114 
lambda20= 0.719384057971014 
lambda30= 0.189311594202899 
lambda20a= 0.719384057971014 
lambda30a= 0.189311594202899 
deltai= 20 
deltak= 20 
beta0= 1 
beta1= 150 
initlambda= 0 
kcgr=0 
kkgr=0 
kigr=0 
icgr=0 
iigr=0 
cgr=0 
kgr=0 
igr=0 
capgr=0 
kkgre=0 
kigre=0 
iigre=0 
thetashock= 0 
phi= 0 
RRcT= 0.0645614035087718 
RRkT= 0.0645614035087722 
RRiT= 0.0645614035087722 
lambdacT= 0.745200000000001 
lambdakT= 0.745199999999998 
lambdaiT= 0.745199999999998 
Mcon=0 
Mk=0 
#END OF MODEL
timeline 1 500
